# Auto detect text files and perform LF normalization
* text=auto
#include<stdio.h>
#include<stdlib.h>
#include<string.h>

void arr_order(int *arr, int n)
{
	int imin, min;
	int i, j;
	for(j = 0; j < n-1; j++)
	{
		imin = j;
		for(i = j+1; i < n; i++)
		{

			if(arr[i] < arr[imin])
				imin = i;
		}
		min = arr[imin];
		arr[imin] = arr[j];
		arr[j] = min;
	}
}

void str_find_num(const char *src, int n)
{
	
	int i, j, k;
	int a, s = 0;
	k = 0;
	for(i = 0; i < n; i++)
	{
		if(src[i] >= '0' && src[i] <= '9')
		{
			k++;
			a = src[i] - '0';
			s = a;
			i++;
			while(src[i] >= '0' && src[i] <= '9')
			{
				a = src[i] - '0';
				s = s*10 + a;
				i++;
			}
		}
	}
        int arr[k];
	s = 0;
	j = 0;
	while(j < k)
	{
		for(i = 0; i < n; i++)
		{
			if(src[i] >= '0' && src[i] <= '9')
			{
                                a = src[i] - '0';
                                s = a;
                                i++;
                                while(src[i] >= '0' && src[i] <= '9')
                                {
                                        a = src[i] - '0';
                                        s = s*10 + a;
                                        i++;
                                }
			        //printf("%d ", s);
			        arr[j] = s;
			        j++;	
                        }
                }
	}
	//printf("\n");
	arr_order(arr, k);
	for(i = 0; i < k; i++)
		printf("%d ", arr[i]);
}

int main()
{
	char *str1;
	int num = 8;
	int i, j, count = 0;

	str1 = (char*)malloc(num*sizeof(char));
	if(str1 == NULL)
	{
		printf("Error: can't allocate memory\n");
		return 1;
	}
	while(scanf("%c", str1 + count) == 1)
	{
		count++;
		if(count == num)
		{
			char *buf;
			num = num*2;
			buf = (char*)realloc(str1, num*sizeof(char));
			if(buf == NULL)
			{
				printf("Error: can't allocate memory\n");
				num = num/2;
				break;
			}
			else
				str1 = buf;
		}
	}

	str_find_num(str1, count-1);
	printf("\n");
	return 0;
}
